/**
 * @file reverseLinkList.cc
 * @brief 
 * @author Qing Xu, xuqinguestc@163.com
 * @version 0.1.00
 * @date 2014-08-28
 */

#include <bits/stdc++.h>
using namespace std;

struct ListNode
{
  int val;
  ListNode *next;
  ListNode(int x):val(x), next(NULL){}
};

void print(ListNode*);
inline int length(ListNode *head)
{
  int result = 0;
  while(head)
  {
    head = head->next;
    ++result;
  }
  return result;
}

void print(ListNode *head) 
{
  ListNode *temp = head;
  while(temp)
  {
    cout << temp->val<< " ";
    temp =  temp->next;
  }
  cout << endl;
}
void destory(ListNode * &head)
{
    while(head)
    {
        ListNode *tmp = head->next;
        delete head;
        head = nullptr;
        head = tmp;
    }
}
int main()
{
  ListNode *head = new ListNode(1);
  head->next = new ListNode(2);
  head = reverseLinkList(head,1,2);
  /*
  ListNode *temp = head->next;
  temp->next = new ListNode(3);
  temp = temp->next;
  temp->next = new ListNode(4);
  temp = temp->next;
  temp->next = new ListNode(5);

  cout << length(head) << endl;
  print(head);
  ListNode *rev = reverseKGroup(head,4);
  print(rev);
  */
  destory(head);

  return 0;
}
