[[1, 2, 3, 4, 5]]
[[1, 1, 1, 1, 1]]
[1, 2, 3, 4, 'END']
['END']
['END', 'END']
['END', 'END', 'END']
['END']
['END']
['END']
num:  (1, 2)
True
3
num:  ()
True
0
num:  (1, 2, 3, 4, 5, 6)
True
21
num:  (1, 2, 3, 4)
True
10
name :  Tom age:  15 other :  {}
True
name :  Jack age:  24 other :  {'city': 'Beijing', 'job': 'software engineer'}
True
name :  Jack age:  24 other :  {'city': 'Beijing', 'job': 'software engineer'}
True
name :  Jack age:  24 other :  {'city': 'Beijing', 'job': 'software engineer'}
True
func(1,2)
1 2 0 () {}
func(1,2,c=3)
1 2 3 () {}
func(1,2,3)
1 2 3 () {}
func(1,2,3,'a','b')
1 2 3 ('a', 'b') {}
func(1,2,3,'a','b',x=99)
1 2 3 ('a', 'b') {'x': 99}
1 2 3 ('a',) {'x': 99}
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[1, 2, 3, 4]
[0, 2, 4, 6, 8]
[1, 3, 5, 7, 9]
key :  a c b value :  1 3 2 pairs :  a 1
c 3
b 2
"abc" is iterable :  True
[1,2,3] is iterable :  True
list is iterable :  False
dict is iterable :  False
0 1
1 2
2 3
3 4
1 2
3 4
5 6
L :  [3, 4]
L :  [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
L :  [0, 4, 16, 36, 64]
L :  ['A1', 'A2', 'A3', 'B1', 'B2', 'B3', 'C1', 'C2', 'C3']
L :  ['a1A', 'a1B', 'a1C', 'a2A', 'a2B', 'a2C', 'a3A', 'a3B', 'a3C', 'b1A', 'b1B', 'b1C', 'b2A', 'b2B', 'b2C', 'b3A', 'b3B', 'b3C', 'c1A', 'c1B', 'c1C', 'c2A', 'c2B', 'c2C', 'c3A', 'c3B', 'c3C'] 27
0 1.txt
1 3.txt
2 .DS_Store
3 2.txt
4 dir
L :  ['y=B', 'x=A', 'z=C']
L :  ['good', 'morning', 'dear', 'mummy']
L :  ['good', 'morning', 'dear', 'mummy']
L :  [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
g :  <generator object <genexpr> at 0x7f0c613058c0>
g:  0
1
4
9
16
25
36
49
64
81
Get an exception
generator is iterable ?  True
g :  0 1 4 9 16 25 36 49 64 81 1
1
2
3
5
8
<generator object fib at 0x7f0c613058c0>
step 1
step 2
step 3
end
step 1
1
step 2
2
step 3
3
res :  [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
45
123456789
13579
True
1908
[3, 9, 12, 21, 63, 435]
[3, 9, 12, 21, 63, 435]
['abd', 'ABGD', 'afD', 'fag']
<function Sum at 0x7f0c5fbe69b0>
10
False
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
<function <lambda> at 0x7f0c5fbe6a28>
9
decorator part...
print today... date()
2014-11-5
print today... date()
2014-11-5
wrapper
decorator need parameter version date2()
2014-11-5
<function wrapper at 0x7f0c5fbe6cf8>
call func : 
full implementation...
Test full implementation of decorator
paramete of log func
full implementation...
execute3 date2()
execute2 date2()
execute1 date2()
decorator need parameter version1 date2()
decorator need parameter version2 date2()
2014-11-5
x, y  2 3
12345
100
4
In f :  2 3 4
In f :  22 2 33
In g :  11 22 33
In g :  111 111 333
